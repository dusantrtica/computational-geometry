number x 2
number y 40
number length 100
number rowHeight 6
number n_startx 26
expression n_starty { y - rowHeight}
expression clefStartYOffset { y + rowHeight }
number clefStartXOffset 10

% function that draws empty sheet
procedure drawEmptySheet { startX startY length rowHeight }
{
number n 0
while {n < 5}
{
point A startX startY
expression bx { startX + length }
point B bx startY
drawsegment A B
expression startY { startY + rowHeight}
expression n {n + 1}
}
}

% function which draws note as an elipse
% and a note bar heading upwards or downwards
% depending on the position of the note in the system
procedure drawNote {centerPt noteOrdNo }
{
% set this param to 2 if you want note of a 
% half length to be displayed
number noteLen  1
number noteHalfWidth 3
number noteHalfHeight 2
number barHeight 10

fillellipse centerPt noteHalfWidth  noteHalfHeight

% C note has a bar which is crossing its body
if_then_else { noteOrdNo == 0 }
{
getx tmpCx centerPt
gety tmpCy centerPt

expression tmpCx {tmpCx-4}
point startCNote tmpCx tmpCy
expression tmpCx {tmpCx + 8 }
point endCNote tmpCx tmpCy
drawsegment startCNote endCNote
}
{}

% if half note is set to be drawn, draw white ellipse inside
if_then_else { noteLen == 2}
{
color 255 255 255
fillellipse centerPt noteHalfWidth 1.6
color 0 0 0
}
{}

getx Cx centerPt
gety Cy centerPt

if_then_else {noteOrdNo < 6 }
{
expression Cx {Cx+noteHalfWidth}
point neckstart Cx Cy
expression Cy {Cy + barHeight}
point neckend Cx Cy
}
{
expression Cx {Cx-noteHalfWidth}
point neckstart Cx Cy

expression Cy {Cy - barHeight}
point neckend Cx Cy
}

point neckend Cx Cy
drawsegment neckstart neckend
}


point vecX 0 0
point vecY 8 3

point C_t n_startx n_starty

number n 0
while { n < 10 }
{
call drawNote { C_t n}

translate C_t vecX vecY C_t
expression n { n + 1}
}

call drawEmptySheet {x y length rowHeight}


% drawing treble clef
% we start with drawing a spiral which starts at G
linethickness 0.5
number endA -7.8
point A 0 0 -7.8 -7.8
getx aa A
expression x { aa*cos(aa) + clefStartXOffset}
expression y  {aa*sin(aa) + clefStartYOffset}
point B x y
trace B 0 0 0 

point C  9.6 54 12 61
trace C 0 0 0

% draw parabole for tip of the clef
point D 12 61 8 61
getx  ppx D
expression ppy {-(ppx-10)*(ppx-10)+65}
point DP ppx ppy
trace DP 0 0 0

point E 8 61 11 37
trace E 0 0 0

% draw parabole for bottom of the clef
point F 11 35 8 35
getx lpx F
expression lpy {(lpx-9.5)*(lpx-9.5)+34.75}
point LP lpx lpy
trace LP 0 0 0

animation_frames 50 60












